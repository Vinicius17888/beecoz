// Prisma + Neon (PostgreSQL)
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Perfil {
  CLIENTE
  AUTONOMO
}

model Login {
  id             Int              @id @default(autoincrement())
  email          String?          @unique
  telefone       String?          @unique
  senhaHash      String
  perfil         Perfil

  // NOVOS CAMPOS PARA BLOQUEIO / TENTATIVAS
  failedAttempts Int              @default(0)
  lockUntil      DateTime?

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  // Relações
  Cliente        Cliente?
  Autonomo       Autonomo?
  PasswordResets PasswordReset[]  // 1:N resets
}

model Cliente {
  id        Int     @id @default(autoincrement())
  loginId   Int     @unique
  nome      String
  genero    String?
  Login     Login   @relation(fields: [loginId], references: [id], onDelete: Cascade)
}

model Autonomo {
  id        Int     @id @default(autoincrement())
  loginId   Int     @unique
  nome      String
  area      String?
  nivel     Int     @default(1)
  Login     Login   @relation(fields: [loginId], references: [id], onDelete: Cascade)
}

// NOVO MODELO PARA RESET DE SENHA
model PasswordReset {
  id        Int       @id @default(autoincrement())
  loginId   Int
  token     String    @unique
  expiresAt DateTime
  usedAt    DateTime?
  createdAt DateTime  @default(now())

  login     Login     @relation(fields: [loginId], references: [id], onDelete: Cascade)

  @@index([loginId])
}
